import java.util.ArrayList;
import java.util.LinkedList;
/**
 * Radix4.java : A driver class that contains and tests the methods required for a RadixSort of up to 4 digits
 * 
 * @author Spencer Thompson
 * @version 1.0
 *
 */
public class Radix4
{
	/**
	 * Creates an initial unsorted array using random numbers and then calls radixSort to sort the array
	 * 
	 * @param args unused
	 */
	public static void main(String[] args)
	{
		int SIZE = 100;
		int[] nums = new int[SIZE];
		for(int x = 0; x < SIZE; x++)
		{
			nums[x] = (int) (Math.random()*10000);
		}
		int[] sorted = radixSort(nums);
		for (int x = 0; x < SIZE; x++)
		{
			System.out.println(sorted[x]);
		}
	}

	/**
	 * Sorts the array (up to four digits) by calling bucketsToList and listToBuckets over 4 iterations
	 * @param array
	 * @return The sorted array
	 */
	public static int[] radixSort(int[] array)
	{
		int size = array.length;
		int it = 0;
		while(it < 4)
		{
			array = bucketsToList(listToBuckets(array, it), size);
			it++;
		}
		return array;
		
	}
	/**
	 * This method sorts the array into 10 different buckets (one for each 0-9) and returns these buckets
	 * 
	 * @param array The array to sort
	 * @param it the current iteration of the sort
	 * @return an ArrayList of LinkedLists of Integers
	 */
	public static ArrayList<LinkedList<Integer>> listToBuckets(int[] array, int it)
	{
		ArrayList<LinkedList<Integer>> buckets = new ArrayList<LinkedList<Integer>>();
		for (int x = 0; x < 10; x++)
		{
			buckets.add(new LinkedList<Integer>());
		}
		for (int x = 0; x < array.length; x ++)
		{
			int digit = ((int) (array[x] / Math.pow(10, it)) % 10);
			buckets.get(digit).add(array[x]);
		}
		return buckets;
		
	}
	/**
	 * This method takes the buckets and converts them back into an array
	 * 
	 * @param buckets The buckets generated by listToBuckets
	 * @param size The size of the original array
	 * @return An array sorted for the next iteration
	 */
	public static int[] bucketsToList(ArrayList<LinkedList<Integer>> buckets, int size)
	{
		int[] sorted = new int[size];
		int index = 0;
		for (LinkedList<Integer> list : buckets)
		{
			for(Integer value : list)
			{
				sorted[index] = value;
				index++;
			}
		}
		return sorted;
	}
}